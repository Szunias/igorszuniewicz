{
  "en": {
    "back": "Back to Projects",
    "hero": {
      "badge": "ðŸŽ® Research Project",
      "title": "Transientica: AudioLab",
      "subtitle": "Beatbox-controlled rhythm game with real-time ML classification"
    },
    "video": {
      "title": "See It in Action"
    },
    "stats": {
      "title": "Real-time Performance Results"
    },
    "overview": {
      "title": "Revolutionary Vocal Percussion Interface"
    },
    "tech": {
      "title": "Technical Implementation",
      "audio": "Audio Processing",
      "ml": "Machine Learning",
      "osc": "OSC Communication",
      "engine": "Game Engine"
    },
    "contrib": {
      "title": "Key Contributions"
    },
    "challenges": {
      "title": "Development Challenges",
      "problem_label": "Problem:",
      "solution_label": "Solution:",
      "challenge1": {
        "title": "Achieving <50ms End-to-End Latency",
        "problem": "Initial prototype had ~180ms latency (audio capture â†’ feature extraction â†’ ML inference â†’ OSC send â†’ game response), making gameplay feel sluggish and unresponsive.",
        "solution": "Optimized entire pipeline: reduced FFT window to 512 samples (11ms @ 44.1kHz), implemented circular buffer to eliminate I/O blocking, moved to lightweight SVM classifier (inference <2ms vs. 15ms for neural net), and used UDP for OSC (zero handshake overhead). Achieved final 45ms latency with 92% accuracy maintained."
      },
      "challenge2": {
        "title": "Beatbox Sound Similarity (Kick vs. Snare)",
        "problem": "Kick and snare beatbox sounds share overlapping spectral content (both have transients + noise), causing frequent misclassification especially during rapid patterns.",
        "solution": "Enhanced feature set beyond MFCCs: added spectral centroid (kick = lower, snare = higher), zero-crossing rate (snare has more HF content), and temporal envelope shape analysis (kick = sharp attack + quick decay, snare = attack + sustained noise). Trained separate models for solo hits vs. patterns. Accuracy improved from 78% to 92%."
      },
      "challenge3": {
        "title": "Real-time Performance Without Audio Dropouts",
        "problem": "Heavy ML processing caused periodic audio buffer underruns on weaker CPUs, resulting in clicks and missed classifications.",
        "solution": "Decoupled audio capture thread from ML inference thread using lock-free ringbuffer. Audio runs on high-priority real-time thread (never blocks), while ML runs on separate worker thread processing buffered data. Added graceful degradation: if inference takes >15ms, system skips that frame and continues (better to miss one classification than dropout audio)."
      }
    }
  },
  "pl": {
    "back": "PowrÃ³t do ProjektÃ³w",
    "hero": {
      "badge": "ðŸŽ® Projekt Badawczy",
      "title": "Transientica: AudioLab",
      "subtitle": "Gra rytmiczna sterowana beatboxem z klasyfikacjÄ… ML w czasie rzeczywistym"
    },
    "video": {
      "title": "Zobacz w Akcji"
    },
    "stats": {
      "title": "Wyniki WydajnoÅ›ci w Czasie Rzeczywistym"
    },
    "overview": {
      "title": "Rewolucyjny Interfejs Perkusji Wokalnej"
    },
    "tech": {
      "title": "Implementacja Techniczna",
      "audio": "Przetwarzanie Audio",
      "ml": "Uczenie Maszynowe",
      "osc": "Komunikacja OSC",
      "engine": "Silnik Gry"
    },
    "contrib": {
      "title": "Kluczowe WkÅ‚ady"
    },
    "challenges": {
      "title": "Wyzwania Rozwoju",
      "problem_label": "Problem:",
      "solution_label": "RozwiÄ…zanie:",
      "challenge1": {
        "title": "OsiÄ…gniÄ™cie <50ms Latencji End-to-End",
        "problem": "PoczÄ…tkowy prototyp miaÅ‚ ~180ms latencji (audio capture â†’ feature extraction â†’ ML inference â†’ OSC send â†’ game response), przez co gameplay byÅ‚ ociÄ™Å¼aÅ‚y i niereaktywny.",
        "solution": "Zoptymalizowano caÅ‚y pipeline: zredukowano FFT window do 512 sampli (11ms @ 44.1kHz), zaimplementowano circular buffer aby wyeliminowaÄ‡ I/O blocking, przejÅ›cie na lekki klasyfikator SVM (inference <2ms vs. 15ms dla neural net), i uÅ¼ycie UDP dla OSC (zero handshake overhead). OsiÄ…gniÄ™to finalnÄ… latencjÄ™ 45ms z utrzymanÄ… accuracy 92%."
      },
      "challenge2": {
        "title": "PodobieÅ„stwo DÅºwiÄ™kÃ³w Beatbox (Kick vs. Snare)",
        "problem": "Kick i snare beatbox sounds dzielÄ… nakÅ‚adajÄ…cÄ… siÄ™ zawartoÅ›Ä‡ spektralnÄ… (oba majÄ… transjenty + noise), powodujÄ…c czÄ™ste bÅ‚Ä™dne klasyfikacje szczegÃ³lnie podczas szybkich patternÃ³w.",
        "solution": "Rozszerzono feature set poza MFCC: dodano spectral centroid (kick = niÅ¼szy, snare = wyÅ¼szy), zero-crossing rate (snare ma wiÄ™cej HF content), i temporal envelope shape analysis (kick = ostry attack + szybki decay, snare = attack + sustained noise). Wytrenowano osobne modele dla solo hits vs. patterns. Accuracy poprawiÅ‚a siÄ™ z 78% do 92%."
      },
      "challenge3": {
        "title": "Real-time Performance Bez Audio Dropouts",
        "problem": "CiÄ™Å¼kie przetwarzanie ML powodowaÅ‚o okresowe audio buffer underruns na sÅ‚abszych CPU, skutkujÄ…c klikniÄ™ciami i pominiÄ™tymi klasyfikacjami.",
        "solution": "Oddzielono audio capture thread od ML inference thread uÅ¼ywajÄ…c lock-free ringbuffer. Audio dziaÅ‚a na high-priority real-time thread (nigdy nie blokuje), podczas gdy ML dziaÅ‚a na osobnym worker thread przetwarzajÄ…cym buforowane dane. Dodano graceful degradation: jeÅ›li inference trwa >15ms, system skipuje tÄ™ klatkÄ™ i kontynuuje (lepiej pominÄ…Ä‡ jednÄ… klasyfikacjÄ™ niÅ¼ dropout audio)."
      }
    }
  },
  "nl": {
    "back": "Terug naar Projecten",
    "hero": {
      "badge": "ðŸŽ® Onderzoeksproject",
      "title": "Transientica: AudioLab",
      "subtitle": "Beatbox-gestuurde ritmegame met realtime ML-classificatie, spectrale flux-analyse en lage-latentie OSC-besturing. Vervang knopdrukken door vocale percussie."
    },
    "video": {
      "title": "Zie Het in Actie"
    },
    "stats": {
      "title": "Realtime Prestatieresultaten"
    },
    "overview": {
      "title": "Revolutionaire Vocale Percussie Interface"
    },
    "tech": {
      "title": "Technische Implementatie",
      "audio": "Audioverwerking",
      "ml": "Machine Learning",
      "osc": "OSC Communicatie",
      "engine": "Game Engine"
    },
    "contrib": {
      "title": "Belangrijkste Bijdragen"
    },
    "challenges": {
      "title": "Ontwikkelingsuitdagingen",
      "problem_label": "Probleem:",
      "solution_label": "Oplossing:",
      "challenge1": {
        "title": "<50ms End-to-End Latentie Bereiken",
        "problem": "Initieel prototype had ~180ms latentie (audio capture â†’ feature extraction â†’ ML inference â†’ OSC send â†’ game response), waardoor gameplay traag en niet-responsief aanvoelde.",
        "solution": "Geoptimaliseerde gehele pipeline: FFT window gereduceerd naar 512 samples (11ms @ 44.1kHz), circular buffer geÃ¯mplementeerd om I/O blocking te elimineren, overstap naar lichtgewicht SVM classifier (inference <2ms vs. 15ms voor neural net), en UDP gebruikt voor OSC (nul handshake overhead). Bereikte uiteindelijke 45ms latentie met behouden 92% nauwkeurigheid."
      },
      "challenge2": {
        "title": "Beatbox Geluid Gelijkenis (Kick vs. Snare)",
        "problem": "Kick en snare beatbox sounds delen overlappende spectrale inhoud (beide hebben transiÃ«nten + ruis), wat frequente misclassificatie veroorzaakte vooral tijdens snelle patronen.",
        "solution": "Uitgebreide feature set voorbij MFCCs: spectral centroid toegevoegd (kick = lager, snare = hoger), zero-crossing rate (snare heeft meer HF content), en temporal envelope shape analyse (kick = scherpe attack + snelle decay, snare = attack + sustained noise). Aparte modellen getraind voor solo hits vs. patronen. Nauwkeurigheid verbeterd van 78% naar 92%."
      },
      "challenge3": {
        "title": "Real-time Performance Zonder Audio Dropouts",
        "problem": "Zware ML processing veroorzaakte periodieke audio buffer underruns op zwakkere CPU's, resulterend in klikken en gemiste classificaties.",
        "solution": "Ontkoppelde audio capture thread van ML inference thread met lock-free ringbuffer. Audio draait op high-priority real-time thread (blokkeert nooit), terwijl ML op aparte worker thread gebufferde data verwerkt. Graceful degradation toegevoegd: als inference >15ms duurt, slaat systeem dat frame over en gaat door (beter Ã©Ã©n classificatie missen dan audio dropout)."
      }
    }
  }
}
