{
  "en": {
    "back": "Back to Projects",
    "tagline": "🏁 Race Against Time. Outsmart Your Grannies. Win Big!",
    "subtitle": "A chaotic multiplayer side-scroller where strategy meets speed",
    "meta": {
      "school": "Digital Arts and Entertainment",
      "released": "Released: May 25, 2025",
      "platforms": "Platforms: Windows, Linux",
      "engine": "Engine: Unreal Engine",
      "modes": "Modes: Local multiplayer (1–4)"
    },
    "video": {
      "title": "🎬 Watch the Madness Unfold",
      "description": "Race against time. Outsmart your grannies. Win big! This chaotic multiplayer game combines fast-paced action with strategic thinking."
    },
    "walkthrough": {
      "title": "🎮 Single Player Walkthrough",
      "desc": "Watch the complete single player gameplay walkthrough. This video showcases complete gameplay and all game mechanics."
    },
    "role": {
      "title": "Role — Audio",
      "desc": "Responsible for sound effects, implementation and mixing: gameplay SFX palette, UI, crowd/ambience layers and integration and in-engine mix for clarity during fast-paced action. System reacts to race states and player events."
    },
    "gameplay": {
      "title": "Gameplay Highlights",
      "li1": "Responsive SFX tied to player actions and obstacles",
      "li2": "Mix hierarchy optimized for clarity (1–4 players)",
      "li3": "Non-intrusive dynamic layers during intense moments"
    },
    "audioDirection": {
      "title": "Audio Direction",
      "desc": "Designed for race readability and energy: clear event telemetry, dynamic crowd and UI that never buries gameplay. An arcade-leaning palette with controlled transients and tasteful saturation to keep the mix tight with up to four players.",
      "b1": "Layering: gameplay > UI clarity > crowd/ambience",
      "b2": "State cues (start, bursts, hazards, finish)",
      "b3": "Spectral masking control and event priorities"
    },
    "sfxSystem": {
      "title": "SFX System",
      "desc": "A parametric library: speed, track surface and cooldown windows drive layers and transients. Boost/burst has its own RPM curves and noise sweetener. Collisions use weights and thresholds to avoid spam.",
      "b1": "Track materials (asphalt/sand/metal) with smooth crossfades",
      "b2": "Hazards/slip – pitch/LPF dependent on camera and speed",
      "b3": "Countdown/Start and Finish stingers as round anchors"
    },
    "mix": {
      "title": "Mix & Dynamics",
      "desc": "Priority‑based mix with ducking: callouts and UI sit above the bed while the crowd ‘breathes’ with race momentum. Submix processing reins in peaks and keeps loudness consistent during chaos.",
      "b1": "Side‑chain ducking for UI/callouts over gameplay",
      "b2": "Automatic crowd/ambience rides from state and position",
      "b3": "Gain staging and reduced spectral masking"
    },
    "integration": {
      "title": "Unreal Integration",
      "desc": "Sound Cues with parameters and Submix buses. Concurrency prevents event pile‑ups; attenuation profiles shape distance; light bus limiting stabilizes perceived loudness at scale.",
      "b1": "Race state parameters + speed/camera inputs",
      "b2": "Submixes: UI, Gameplay, Ambience + limiter on Master",
      "b3": "Concurrency and collision trigger thresholds"
    },
    "metrics": {
      "title": "Technical Metrics",
      "desc": "Comprehensive breakdown of audio implementation scope, performance metrics, and resource management.",
      "events": "320+ audio events",
      "events_desc": "Across 12 categories: player actions, environment, UI, crowd, hazards, boost, collision, surface transitions, state changes, countdowns, finishes, and victory stingers",
      "footprint": "180 MB audio footprint",
      "footprint_desc": "Optimized with streaming and compression (Vorbis @ variable quality). ~450 source files processed to final assets",
      "voice_count": "Max 32 concurrent voices",
      "voice_count_desc": "Priority-based voice culling: UI/gameplay critical (priority 1.0) > player SFX (0.8) > crowd/ambience (0.5). Automatic stealing on overflow",
      "latency": "< 45ms input-to-audio",
      "latency_desc": "Maintained across all gameplay scenarios with real-time parameter modulation and MetaSounds processing",
      "memory": "~85 MB peak RAM usage",
      "memory_desc": "Includes loaded banks, streaming buffer, and active DSP. Managed via Unreal's audio streaming system"
    },
    "challenges": {
      "title": "Challenges & Solutions",
      "desc": "Real-world problems encountered during development and the technical solutions implemented.",
      "challenge1": {
        "title": "4-Player Mix Clarity",
        "problem": "With up to 4 simultaneous players, collision and boost sounds would stack and cause frequency masking, making UI feedback inaudible.",
        "solution": "Implemented priority-based concurrency limiting (max 4 collision sounds at once) with intelligent voice stealing. Added frequency-conscious EQ curves per player slot (slot 1: 200-800Hz focus, slot 2: 800-2kHz, etc.) and applied sidechain ducking on crowd/ambience when UI events trigger (-6dB duck, 50ms attack, 200ms release)."
      },
      "challenge2": {
        "title": "Surface Transition Pops",
        "problem": "Players moving between track materials (asphalt → sand → metal) caused audible pops due to instant layer switching.",
        "solution": "Replaced instant switches with crossfade system using Unreal's blend containers. Added 150ms crossfade time with equal-power curve. Surface detection uses overlap sphere with 0.2s cooldown to prevent rapid transitions."
      },
      "challenge3": {
        "title": "Boost Sound Memory Spikes",
        "problem": "Original boost SFX used 4-layer system with 24-bit WAV files, causing 40MB memory spikes per instance (x4 players = potential 160MB spike).",
        "solution": "Refactored to procedural MetaSounds patch: noise generator + band-pass filter sweep + pitch modulation driven by boost intensity parameter. Reduced to <2MB per instance while maintaining sonic character. Added RPM-style pitch curve for organic acceleration feel."
      }
    },
    "metasounds": {
      "title": "MetaSounds",
      "desc": "Entire audio system built in MetaSounds – a modern procedural-parametric framework in Unreal Engine. Enables reactive, modular sound design responding to gameplay in real-time.",
      "b1": "Procedural layers driven by speed and game state",
      "b2": "Parametric controllers for pitch/filters/modulation",
      "b3": "Modular patches enabling rapid iteration"
    },
    "player": {
      "label": "Play sample"
    },
    "team": {
      "title": "Team"
    },
    "gallery": {
      "title": "Gallery"
    },
    "download": {
      "title": "Download",
      "desc": "Download the game on itch.io:",
      "sizes": "Windows build (1.0 GB), Linux build (967 MB)"
    },
    "button": {
      "projects": "All Projects"
    }
  },
  "pl": {
    "back": "Powrót do projektów",
    "tagline": "🏁 Wyścig z czasem. Przechytrz babcie. Wygraj wszystko!",
    "subtitle": "Chaotyczna wieloosobowa gra platformowa, gdzie strategia spotyka się z szybkością",
    "meta": {
      "school": "Digital Arts and Entertainment",
      "released": "Wydano: 25 maja 2025",
      "platforms": "Platformy: Windows, Linux",
      "engine": "Silnik: Unreal Engine",
      "modes": "Tryby: Lokalny multiplayer (1–4)"
    },
    "video": {
      "title": "🎬 Obejrzyj trailer",
      "description": "Wyścig z czasem. Przechytrz babcie. Wygraj wszystko! Ta chaotyczna gra wieloosobowa łączy szybką akcję z przemyślaną strategią."
    },
    "walkthrough": {
      "title": "🎮 Single Player Walkthrough",
      "desc": "Zobacz pełne przejście gry w trybie single player. Ten materiał pokazuje kompletną rozgrywkę oraz wszystkie mechaniki gameplayu."
    },
    "role": {
      "title": "Rola — Audio",
      "desc": "Odpowiadałem za sound effects, implementację i miks: paleta SFX gameplayu, UI, warstwy crowd/ambience oraz integrację i miks w silniku dla czytelności przy szybkiej akcji. System reaguje na stany wyścigu i zdarzenia gracza."
    },
    "gameplay": {
      "title": "Gameplay Highlights",
      "li1": "Responsywne SFX powiązane z akcjami gracza i przeszkodami",
      "li2": "Hierarchia miksu zoptymalizowana pod czytelność (1–4 graczy)",
      "li3": "Niewchodzące w drogę warstwy dynamiczne przy intensywnych momentach"
    },
    "audioDirection": {
      "title": "Kierunek Audio",
      "desc": "Audio pod czytelność i energię wyścigu: wyraźna telemetria zdarzeń, dynamiczny tłum i UI, które nie zagłusza gry. Paleta bliżej „arcade”, ale z kontrolą transjentów i nasycenia, by miks był ciasny przy 1–4 graczach.",
      "b1": "Warstwy: gameplay > czytelność UI > crowd/ambience",
      "b2": "Wskaźniki stanów (start, bursty, hazardy, finisz)",
      "b3": "Kontrola maskowania widmem i priorytety zdarzeń"
    },
    "sfxSystem": {
      "title": "System SFX",
      "desc": "Biblioteka efektów jest parametryczna: prędkość, nawierzchnia toru i okna cooldown sterują warstwami i transientami. Booster/burst ma własne krzywe obrotów i szumowy sweetener. Kolizje korzystają z wag i progów, by uniknąć spamu.",
      "b1": "Materiały toru (asfalt/piasek/metal) – płynne przejścia",
      "b2": "Hazardy/slip – pitch/LPF zależnie od kamery i prędkości",
      "b3": "Odliczanie/Start i fanfary finiszu jako kotwice rundy"
    },
    "mix": {
      "title": "Mix & Dynamika",
      "desc": "Miks z priorytetami i duckingiem: callouty i UI ponad bedem, crowd „oddycha” z tempem wyścigu. Submix processing trzyma piki i stabilizuje głośność w chaosie.",
      "b1": "Sidechain ducking dla UI/calloutów nad gameplay",
      "b2": "Automatyka crowd/ambience od stanu i pozycji",
      "b3": "Gain staging i redukcja maskowania widmem"
    },
    "integration": {
      "title": "Integracja w Unreal",
      "desc": "Sound Cues z parametrami i Submix Bus. Concurrency zapobiega nawarstwianiu zdarzeń; profile tłumienia kształtują dystans; lekki limiter na busach stabilizuje głośność.",
      "b1": "Parametry stanów + prędkość/kamera",
      "b2": "Submixy: UI, Gameplay, Ambience + limiter na Master",
      "b3": "Concurrency i progi wyzwalania kolizji"
    },
    "metrics": {
      "title": "Metryki Techniczne",
      "desc": "Szczegółowe zestawienie zakresu implementacji audio, metryk wydajności i zarządzania zasobami.",
      "events": "320+ eventów audio",
      "events_desc": "W 12 kategoriach: akcje gracza, środowisko, UI, crowd, hazardy, boost, kolizje, przejścia materiałów, zmiany stanów, odliczania, finisze, victory stingers",
      "footprint": "180 MB audio footprint",
      "footprint_desc": "Zoptymalizowane przez streaming i kompresję (Vorbis @ zmienna jakość). ~450 plików źródłowych przetworzonych do finalnych assetów",
      "voice_count": "Max 32 równoczesne voice'y",
      "voice_count_desc": "Voice culling oparty na priorytetach: UI/gameplay krytyczne (priorytet 1.0) > player SFX (0.8) > crowd/ambience (0.5). Automatyczne stealing przy overflow",
      "latency": "< 45ms input-to-audio",
      "latency_desc": "Utrzymane we wszystkich scenariuszach gameplay z real-time modulacją parametrów i przetwarzaniem MetaSounds",
      "memory": "~85 MB peak RAM usage",
      "memory_desc": "Wliczając załadowane banki, buffer streamingu i aktywny DSP. Zarządzane przez system streaming audio Unreala"
    },
    "challenges": {
      "title": "Wyzwania i Rozwiązania",
      "desc": "Realne problemy napotkane podczas developmentu i zaimplementowane rozwiązania techniczne.",
      "challenge1": {
        "title": "Czytelność Miksu przy 4 Graczach",
        "problem": "Przy 4 graczach jednocześnie, dźwięki kolizji i boost'ów się nawarstwiały i powodowały maskowanie częstotliwości, przez co UI feedback był niesłyszalny.",
        "solution": "Zaimplementowano concurrency limiting oparty na priorytetach (max 4 dźwięki kolizji jednocześnie) z inteligentnym voice stealing. Dodano EQ curves świadome częstotliwości per slot gracza (slot 1: focus 200-800Hz, slot 2: 800-2kHz, etc.) oraz sidechain ducking na crowd/ambience gdy triggują eventy UI (-6dB duck, 50ms attack, 200ms release)."
      },
      "challenge2": {
        "title": "Popy przy Przejściach Materiałów",
        "problem": "Gracze poruszający się między materiałami toru (asfalt → piasek → metal) powodowali słyszalne popy przez instant layer switching.",
        "solution": "Zastąpiono instant switche systemem crossfade używając blend containers Unreala. Dodano 150ms crossfade time z equal-power curve. Detekcja materiału używa overlap sphere z 0.2s cooldown aby zapobiec szybkim przejściom."
      },
      "challenge3": {
        "title": "Spike'i Pamięci przy Boost Sound",
        "problem": "Oryginalny boost SFX używał 4-warstwowego systemu z 24-bit WAV, powodując 40MB spike pamięci per instancja (x4 gracze = potencjalnie 160MB spike).",
        "solution": "Refaktor do proceduralnego MetaSounds patch: noise generator + band-pass filter sweep + pitch modulation sterowana przez boost intensity parameter. Zredukowano do <2MB per instancja przy zachowaniu sonic character. Dodano RPM-style pitch curve dla organicznego feel przyspieszenia."
      }
    },
    "metasounds": {
      "title": "MetaSounds",
      "desc": "Cały system audio zbudowany w MetaSounds – nowoczesnym systemie proceduralno-parametrycznym w Unreal Engine. Pozwala na reaktywny, modularny sound design reagujący na gameplay w czasie rzeczywistym.",
      "b1": "Proceduralne warstwy zależne od prędkości i stanu gry",
      "b2": "Parametryczne kontrolery dla pitch/filtrów/modulacji",
      "b3": "Modularne patche umożliwiające szybkie iteracje"
    },
    "player": {
      "label": "Odtwórz próbkę"
    },
    "team": {
      "title": "Zespół"
    },
    "gallery": {
      "title": "Galeria"
    },
    "download": {
      "title": "Pobierz",
      "desc": "Pobierz grę na itch.io:",
      "sizes": "Windows build (1.0 GB), Linux build (967 MB)"
    },
    "button": {
      "projects": "Wszystkie Projekty"
    }
  },
  "nl": {
    "back": "Terug naar Projecten",
    "tagline": "🏁 Ren tegen de tijd. Slim af je oma's. Win groot!",
    "subtitle": "Een chaotische multiplayer side-scroller waar strategie snelheid ontmoet",
    "meta": {
      "school": "Digital Arts and Entertainment",
      "released": "Uitgebracht: 25 mei 2025",
      "platforms": "Platforms: Windows, Linux",
      "engine": "Engine: Unreal Engine",
      "modes": "Modi: Lokale multiplayer (1–4)"
    },
    "video": {
      "title": "🎬 Bekijk de waanzin",
      "description": "Ren tegen de tijd. Slim af je oma's. Win groot! Deze chaotische multiplayer game combineert snelle actie met strategisch denken."
    },
    "walkthrough": {
      "title": "🎮 Single Player Walkthrough",
      "desc": "Bekijk de volledige single player gameplay walkthrough. Deze video toont volledige gameplay en alle game mechanics."
    },
    "role": {
      "title": "Rol — Audio",
      "desc": "Verantwoordelijk voor geluidseffecten, implementatie en mixing: gameplay SFX-palet, UI, crowd/ambience lagen en integratie en in-engine mix voor duidelijkheid tijdens snelle actie. Systeem reageert op race-staten en speler-evenementen."
    },
    "gameplay": {
      "title": "Gameplay Highlights",
      "li1": "Responsieve SFX gekoppeld aan speleracties en obstakels",
      "li2": "Mix hiërarchie geoptimaliseerd voor duidelijkheid (1–4 spelers)",
      "li3": "Niet-opdringerige dynamische lagen tijdens intense momenten"
    },
    "audioDirection": {
      "title": "Audio Direction",
      "desc": "Ontworpen voor leesbaarheid en energie van de race: duidelijke event-telemetrie, dynamisch publiek en UI die gameplay niet overstemt. Arcade-achtige klank met gecontroleerde transiënten en subtiele saturatie voor 1–4 spelers.",
      "b1": "Laagstructuur: gameplay > UI-duidelijkheid > crowd/ambience",
      "b2": "Statuscues (start, bursts, hazards, finish)",
      "b3": "Minder spectrale masking en eventprioriteiten"
    },
    "sfxSystem": {
      "title": "SFX-systeem",
      "desc": "Parametrische bibliotheek: snelheid, baanoppervlak en cooldownvensters sturen lagen en transiënten. Boost/burst met eigen RPM-curves en noise sweetener. Botsingen met gewichten en drempels om spam te vermijden.",
      "b1": "Baanmaterialen (asfalt/zand/metaal) met soepele crossfades",
      "b2": "Hazards/slip – pitch/LPF afhankelijk van camera en snelheid",
      "b3": "Countdown/Start en Finish-stingers als rondeankers"
    },
    "mix": {
      "title": "Mix & Dynamiek",
      "desc": "Mix met prioriteiten en ducking: callouts en UI boven de bed; het publiek ‘ademt’ mee met de race. Submix-processing temt pieken en houdt loudness stabiel.",
      "b1": "Sidechain ducking voor UI/callouts boven gameplay",
      "b2": "Automatische crowd/ambience rides via status en positie",
      "b3": "Gain staging en minder spectrale masking"
    },
    "integration": {
      "title": "Unreal-integratie",
      "desc": "Sound Cues met parameters en Submix-bussen. Concurrency voorkomt stapeling; attenuatieprofielen vormen afstand; lichte bus‑limiting stabiliseert loudness.",
      "b1": "Race‑status + snelheid/camera als inputs",
      "b2": "Submixen: UI, Gameplay, Ambience + limiter op Master",
      "b3": "Concurrency en drempels voor botsingstriggers"
    },
    "metrics": {
      "title": "Technische Metrics",
      "desc": "Uitgebreide breakdown van audio-implementatie scope, prestatiemetrics en resource management.",
      "events": "320+ audio events",
      "events_desc": "Over 12 categorieën: speleracties, omgeving, UI, publiek, hazards, boost, botsing, oppervlakte-overgangen, statuswijzigingen, aftelllingen, finishes en overwinningsstingers",
      "footprint": "180 MB audio footprint",
      "footprint_desc": "Geoptimaliseerd met streaming en compressie (Vorbis @ variabele kwaliteit). ~450 bronbestanden verwerkt tot finale assets",
      "voice_count": "Max 32 gelijktijdige voices",
      "voice_count_desc": "Prioriteit-gebaseerde voice culling: UI/gameplay kritiek (prioriteit 1.0) > speler SFX (0.8) > crowd/ambience (0.5). Automatisch stealing bij overflow",
      "latency": "< 45ms input-naar-audio",
      "latency_desc": "Gehandhaafd over alle gameplay-scenario's met realtime parametermodulatie en MetaSounds-verwerking",
      "memory": "~85 MB piek RAM-gebruik",
      "memory_desc": "Inclusief geladen banks, streaming buffer en actieve DSP. Beheerd via Unreal's audio streaming systeem"
    },
    "challenges": {
      "title": "Uitdagingen & Oplossingen",
      "desc": "Real-world problemen tijdens ontwikkeling en de geïmplementeerde technische oplossingen.",
      "challenge1": {
        "title": "4-Speler Mix Helderheid",
        "problem": "Met tot 4 gelijktijdige spelers zouden botsing- en boost-geluiden stapelen en frequentie-masking veroorzaken, waardoor UI-feedback onhoorbaar werd.",
        "solution": "Implementeerde prioriteit-gebaseerde concurrency limiting (max 4 botsingsgeluiden tegelijk) met intelligente voice stealing. Toegevoegde frequentie-bewuste EQ curves per speler slot (slot 1: 200-800Hz focus, slot 2: 800-2kHz, etc.) en paste sidechain ducking toe op crowd/ambience wanneer UI events triggeren (-6dB duck, 50ms attack, 200ms release)."
      },
      "challenge2": {
        "title": "Oppervlakte-overgang Pops",
        "problem": "Spelers die tussen baanmaterialen bewogen (asfalt → zand → metaal) veroorzaakten hoorbare pops door instant layer switching.",
        "solution": "Vervangen instant switches door crossfade systeem met Unreal's blend containers. Toegevoegd 150ms crossfade tijd met equal-power curve. Oppervlakte-detectie gebruikt overlap sphere met 0.2s cooldown om snelle overgangen te voorkomen."
      },
      "challenge3": {
        "title": "Boost Sound Geheugenpieken",
        "problem": "Originele boost SFX gebruikte 4-lagen systeem met 24-bit WAV bestanden, wat 40MB geheugenpieken veroorzaakte per instantie (x4 spelers = potentieel 160MB piek).",
        "solution": "Gerefactored naar procedurele MetaSounds patch: noise generator + band-pass filter sweep + pitch modulatie aangestuurd door boost intensity parameter. Gereduceerd naar <2MB per instantie met behoud van sonisch karakter. Toegevoegd RPM-stijl pitch curve voor organisch acceleratie gevoel."
      }
    },
    "metasounds": {
      "title": "MetaSounds",
      "desc": "Volledig audiosysteem gebouwd in MetaSounds – een modern procedureel-parametrisch framework in Unreal Engine. Maakt reactief, modulair geluidontwerp mogelijk dat reageert op gameplay in realtime.",
      "b1": "Procedurale lagen aangestuurd door snelheid en game-status",
      "b2": "Parametrische controllers voor pitch/filters/modulatie",
      "b3": "Modulaire patches voor snelle iteratie"
    },
    "player": {
      "label": "Speel sample"
    },
    "team": {
      "title": "Team"
    },
    "gallery": {
      "title": "Galerij"
    },
    "download": {
      "title": "Download",
      "desc": "Download het spel op itch.io:",
      "sizes": "Windows build (1.0 GB), Linux build (967 MB)"
    },
    "button": {
      "projects": "Alle Projecten"
    }
  }
}
